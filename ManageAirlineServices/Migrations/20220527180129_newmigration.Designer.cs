// <auto-generated />
using System;
using ManageAirlineServices.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ManageAirlineServices.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220527180129_newmigration")]
    partial class newmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CommonServices.Model.Airline", b =>
                {
                    b.Property<int>("AirlineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AirlineName");

                    b.Property<bool?>("Blocked");

                    b.Property<string>("ContactAddress");

                    b.Property<string>("ContactNumber");

                    b.Property<double?>("DisAmount");

                    b.Property<string>("DisCode");

                    b.Property<string>("logo");

                    b.HasKey("AirlineId");

                    b.ToTable("Airlines");
                });

            modelBuilder.Entity("CommonServices.Model.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirlineId");

                    b.Property<int>("BusinessSeats");

                    b.Property<DateTime?>("EndDateTime");

                    b.Property<string>("FlightNumber");

                    b.Property<string>("FromPlace");

                    b.Property<string>("InstrumentUsed");

                    b.Property<string>("Meal");

                    b.Property<int>("NonBusinessSeats");

                    b.Property<int>("Rows");

                    b.Property<string>("ScheduledDays");

                    b.Property<DateTime?>("StartDateTime");

                    b.Property<string>("ToPlace");

                    b.Property<double>("TotalCost");

                    b.HasKey("ScheduleId");

                    b.HasIndex("AirlineId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("CommonServices.Model.Schedule", b =>
                {
                    b.HasOne("CommonServices.Model.Airline", "Airline")
                        .WithMany("Schedules")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
